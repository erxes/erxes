widgets:install_dependencies:
  stage: install_dependencies
  image: node:10.16-slim
  before_script:
    - cd widgets
  script:
    - yarn install
  rules:
    - changes:
        - widgets/package.json
        # Only creating cache when this file changes.
        # If cache is deleted somehow run pipelines manually to create cache again.
        # Otherwise new cache won't build until widgets/package.json file changed.
  cache:
    key:
      files:
        - widgets/package.json
      prefix: widgets
    paths:
      - widgets/node_modules/
    policy: pull-push

widgets:test_and_build:
  stage: test_and_build
  image: node:10.16-slim
  before_script:
    - cd widgets
    - apt-get update && apt-get install -y git
    - yarn install # verifying dependencies
    - git checkout ${CI_COMMIT_REF_NAME}
  script:
    - yarn lint
    - yarn build
  rules:
    - changes:
        - widgets/**/*
  cache:
    key:
      files:
        - widgets/package.json
      prefix: widgets
    paths:
      - widgets/node_modules/
    policy: pull
  artifacts:
    expire_in: 1h
    paths:
      - widgets/dist/
      - widgets/static/
      - widgets/node_modules/

widgets:build_docker_image:
  stage: build_docker_images
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - cd widgets
    - docker build -t erxes/erxes-widgets:${CI_COMMIT_REF_NAME} -f Dockerfile .
    - docker push erxes/erxes-widgets:${CI_COMMIT_REF_NAME}
  rules:
    - changes:
        - widgets/**/*
      if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "apm"'
  needs:
    - job: widgets:test_and_build
      artifacts: true
