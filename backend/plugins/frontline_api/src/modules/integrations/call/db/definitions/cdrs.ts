import { Schema } from 'mongoose';

export const CDRSchema = new Schema({
  inboxIntegrationId: { type: String },
  conversationId: { type: String },
  createdAt: { type: Date },
  updatedAt: { type: Date },
  createdBy: { type: String },
  updatedBy: { type: String },
  acctId: { type: String },
  src: { type: String },
  dst: { type: String },
  dcontext: { type: String },
  clid: { type: String },
  channel: { type: String },
  lastapp: { type: String },
  lastdata: { type: String },
  start: { type: Date },
  answer: { type: Date },
  end: { type: Date },
  duration: { type: Number },
  billsec: { type: Number },
  disposition: { type: String },
  amaflags: { type: String },
  uniqueid: { type: String },
  userfield: { type: String },
  channelExt: { type: String },
  dstchannelExt: { type: String },
  service: { type: String },
  callerName: { type: String },
  dstanswer: { type: String },
  session: { type: String },
  actionOwner: { type: String },
  actionType: { type: String },
  srcTrunkName: { type: String },
  dstTrunkName: { type: String },
  natCall: { type: String },
  natCallPeer: { type: String },
  videoCall: { type: String },
  gdmsUniqueCode: { type: String },
  gdsCall: { type: String },
  gscCall: { type: String },
  waveSrcSeqid: { type: String },
  waveDstSeqid: { type: String },
  deviceInfo: { type: String },
  deviceInfoPeer: { type: String },
  recordfilesDesc: { type: String },
  recordfiles: { type: String },
  anonymousCall: { type: String },
  reason: { type: String },
  waveSrcHide: { type: String },
  waveDstHide: { type: String },
  newSrc: { type: String },
  sn: { type: String },
  recordUrl: { type: String },
  oldRecordUrl: { type: String },
});

CDRSchema.index({ acctId: 1 }, { unique: true });
