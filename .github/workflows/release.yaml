name: Publish Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js 12.18.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.18.x

    - name: Get release version
      id: get_release_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    # https://github.com/actions/cache/blob/master/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: UI - Install dependencies
      run: |
        cd ui
        yarn install

    - name: UI - Lint
      run: |
        cd ui
        yarn lint

    - name: UI - Tsc
      run: |
        cd ui
        yarn tsc

    - name: UI - Build
      run: |
        cd ui
        rm -rf node_modules
        yarn install --production
        yarn build

    - name: UI - Build docker image
      env:
        BASE_IMAGE: erxes/erxes:base-1.18-alpine
      run: |
        cd ui
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        DOCKER_BUILDKIT=1 docker build --build-arg BASE_IMAGE=$BASE_IMAGE -t erxes/erxes:${GITHUB_REF#refs/tags/} -f ui.Dockerfile .
        docker push erxes/erxes:${GITHUB_REF#refs/tags/}

    - name: Widgets - Install dependencies
      run: |
        cd widgets
        yarn install

    - name: Widgets - Lint
      run: |
        cd widgets
        yarn lint

    - name: Widgets - Build
      run: |
        cd widgets
        rm -rf node_modules
        yarn install --production
        yarn build

    - name: Widgets - Build docker image
      run: |
        cd widgets
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
        docker build -t erxes/erxes-widgets:${GITHUB_REF#refs/tags/} -f Dockerfile .
        docker push erxes/erxes-widgets:${GITHUB_REF#refs/tags/}

    - name: Prepare release assets
      run: |
        mv ui/build erxes
        mkdir -p erxes-widgets
        mv widgets/dist widgets/node_modules widgets/locales widgets/static widgets/package.json erxes-widgets
        tar -zcf erxes-${GITHUB_REF#refs/tags/}.tar.gz erxes erxes-widgets

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
          files: |
            erxes-${{ steps.get_release_version.outputs.VERSION }}.tar.gz
          name: Release ${{ steps.get_release_version.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
