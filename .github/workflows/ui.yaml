name: UI CI

on:
  push:
    branches:
      - "**"
    paths:
      - "ui/**"
      - "plugins/**/ui"
      - ".github/workflows/ui.yaml"
      - "!ui/nginx/**"
      - "!ui/docker-entrypoint.sh"
      - "!ui/base.Dockerfile"
      - "!ui/base.Dockerfile.dockerignore"
  pull_request:
    branches:
      - priuscenter
    paths:
      - "ui/**"
      - "plugins/**/ui"
      - "!ui/nginx/**"
      - "!ui/docker-entrypoint.sh"
      - "!ui/base.Dockerfile"
      - "!ui/base.Dockerfile.dockerignore"

jobs:
  ui:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 12.20.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.20.x

      # https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-ui-${{ hashFiles('yarn.lock', 'ui/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-ui-
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install
          yarn prepare-plugins-ui
          cd ui
          yarn install --frozen-lockfile

      - name: Lint
        run: |
          yarn lint ui

      - name: Tsc
        run: |
          cd ui
          yarn tsc

      - name: Build
        run: |
          cd ui
          rm -rf node_modules
          rm -rf src/__tests__
          rm src/setupTests.ts
          yarn install --frozen-lockfile --production
          cd ..
          yarn prepare-plugins-ui
          cd ui
          yarn build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: registry.erxes.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Extract base image name
        shell: bash
        env:
          BASE_IMAGE: erxes/erxes:base-1.18-alpine
        run: echo "##[set-output name=base-image;]$(echo ${BASE_IMAGE})"
        id: extract_base_image

      - name: Build docker image
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/priuscenter')
        env:
          DOCKER_BUILDKIT: 1
        uses: docker/build-push-action@v2
        with:
          context: ui
          file: ./ui/ui.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            erxes-enterprise/erxes:${{ steps.extract_branch.outputs.branch }}
          build-args: |
            BASE_IMAGE=${{ steps.extract_base_image.outputs.base-image }}
